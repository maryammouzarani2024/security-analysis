Path traversal or directory traversal.
It enables an attacker to read arbitrary files on the server that is running an application.

sample attack pattern:

https://insecure-website.com/loadImage?filename=..\..\..\windows\win.ini


Common obstacles to exploiting path traversal vulnerabilities

- The application might strip or block directory traversal sequences from the user-supplied filename.

    Solution:
        1. You might be able to use an absolute path from the filesystem root, such as filename=/etc/passwd, to directly reference a file without using any traversal sequences.
        sample lab2-Solution.txt

        2. You might be able to use nested traversal sequences, such as ....// or ....\/. These revert to simple traversal sequences when the inner sequence is stripped.
        sample lab3-solution.txt

- In some contexts, such as in a URL path or the filename parameter of a multipart/form-data request, web servers may strip any directory traversal sequences before passing your input to the application. 

    Solution:
        1. You can sometimes bypass this kind of sanitization by URL encoding, or even double URL encoding, the ../ characters. This results in %2e%2e%2f and %252e%252e%252f respectively. Various non-standard encodings, such as ..%c0%af or ..%ef%bc%8f, may also work.
        sample lab4-Solution.txt


        2. For Burp Suite Professional users, Burp Intruder provides the predefined payload list Fuzzing - path traversal. This contains some encoded path traversal sequences that you can try.


